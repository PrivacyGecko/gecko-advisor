name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: privacy
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports: ['6379:6379']
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v4
        with:
          version: 10.14.0
          run_install: true

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: |
            ~/.pnpm-store
            **/node_modules/.pnpm
            **/.turbo
            **/node_modules/.prisma
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Generate license report
        run: pnpm run licenses:report
      - name: Enforce license policy
        run: pnpm run licenses:check
      - name: SPDX header check (changed files)
        run: pnpm run spdx:check
        env:
          SPDX_ONLY_CHANGED: '1'
      - name: Generate Prisma Client
        run: pnpm prisma:generate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/privacy
      - name: Migrate DB
        run: pnpm prisma:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/privacy
      - name: Ensure shadow database
        run: |
          PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -tc "SELECT 1 FROM pg_database WHERE datname='privacy_shadow'" | grep -q 1 || PGPASSWORD=postgres psql -h localhost -U postgres -d postgres -c "CREATE DATABASE privacy_shadow"
      - name: Check migrations match schema
        run: npx prisma migrate diff --from-migrations=infra/prisma/migrations --to-schema-datamodel=infra/prisma/schema.prisma --shadow-database-url=postgresql://postgres:postgres@localhost:5432/privacy_shadow --exit-code
      - name: Lint
        run: pnpm -w lint
      - name: Typecheck
        run: pnpm -w typecheck
      - name: Test
        run: pnpm -w test
        env:
          RUN_DB_TESTS: '1'
      - name: Build
        run: pnpm -w build

      - name: Upload test results and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            **/test-results/**
            **/coverage/**
            **/LICENSES.json
          retention-days: 7







